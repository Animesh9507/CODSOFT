import tkinter as tk
from tkinter import messagebox
import csv
import os

FILE_NAME = "contacts.csv"

# Create file if not exists
if not os.path.exists(FILE_NAME):
    with open(FILE_NAME, "w", newline="") as f:
        writer = csv.writer(f)
        writer.writerow(["Name", "Phone", "Email"])

def load_contacts():
    contacts = []
    with open(FILE_NAME, "r") as f:
        reader = csv.reader(f)
        next(reader)  # skip header
        for row in reader:
            contacts.append(row)
    return contacts

def save_contact(name, phone, email):
    with open(FILE_NAME, "a", newline="") as f:
        writer = csv.writer(f)
        writer.writerow([name, phone, email])

def refresh_list():
    contact_list.delete(0, tk.END)
    for contact in load_contacts():
        contact_list.insert(tk.END, f"{contact[0]} - {contact[1]} - {contact[2]}")

def add_contact():
    name = entry_name.get()
    phone = entry_phone.get()
    email = entry_email.get()
    if not name or not phone:
        messagebox.showerror("Error", "Name and Phone are required!")
        return
    save_contact(name, phone, email)
    messagebox.showinfo("Success", "Contact added successfully!")
    entry_name.delete(0, tk.END)
    entry_phone.delete(0, tk.END)
    entry_email.delete(0, tk.END)
    refresh_list()

def delete_contact():
    selected = contact_list.curselection()
    if not selected:
        messagebox.showerror("Error", "Please select a contact to delete.")
        return
    index = selected[0]
    contacts = load_contacts()
    contacts.pop(index)
    with open(FILE_NAME, "w", newline="") as f:
        writer = csv.writer(f)
        writer.writerow(["Name", "Phone", "Email"])
        writer.writerows(contacts)
    refresh_list()

def search_contact():
    query = entry_search.get().lower()
    contact_list.delete(0, tk.END)
    for contact in load_contacts():
        if query in contact[0].lower():
            contact_list.insert(tk.END, f"{contact[0]} - {contact[1]} - {contact[2]}")

# GUI Setup
root = tk.Tk()
root.title("Contact Book")
root.geometry("500x550")
root.config(bg="#222831")

tk.Label(root, text="Contact Book", font=("Arial", 18, "bold"), bg="#222831", fg="#FFD369").pack(pady=10)

frame_inputs = tk.Frame(root, bg="#222831")
frame_inputs.pack(pady=10)

tk.Label(frame_inputs, text="Name:", bg="#222831", fg="white").grid(row=0, column=0, sticky="w")
entry_name = tk.Entry(frame_inputs, width=30)
entry_name.grid(row=0, column=1, pady=5)

tk.Label(frame_inputs, text="Phone:", bg="#222831", fg="white").grid(row=1, column=0, sticky="w")
entry_phone = tk.Entry(frame_inputs, width=30)
entry_phone.grid(row=1, column=1, pady=5)

tk.Label(frame_inputs, text="Email:", bg="#222831", fg="white").grid(row=2, column=0, sticky="w")
entry_email = tk.Entry(frame_inputs, width=30)
entry_email.grid(row=2, column=1, pady=5)

tk.Button(root, text="Add Contact", bg="#00ADB5", fg="white", width=20, command=add_contact).pack(pady=5)

tk.Label(root, text="Search by Name:", bg="#222831", fg="white").pack()
entry_search = tk.Entry(root, width=40)
entry_search.pack(pady=5)
tk.Button(root, text="Search", bg="#393E46", fg="white", command=search_contact).pack(pady=5)

contact_list = tk.Listbox(root, width=60, height=15, bg="#393E46", fg="white")
contact_list.pack(pady=10)

tk.Button(root, text="Delete Selected Contact", bg="#FF5722", fg="white", command=delete_contact).pack(pady=5)
tk.Button(root, text="Refresh List", bg="#00ADB5", fg="white", command=refresh_list).pack(pady=5)

refresh_list()
root.mainloop()
