import tkinter as tk
from tkinter import messagebox, simpledialog
import json

FILENAME = "tasks.json"

def load_tasks():
    try:
        with open(FILENAME, "r") as f:
            return json.load(f)
    except FileNotFoundError:
        return []

def save_tasks():
    with open(FILENAME, "w") as f:
        json.dump(tasks, f, indent=4)

def update_listbox():
    listbox.delete(0, tk.END)
    for i, t in enumerate(tasks):
        status = "✔" if t["completed"] else "✗"
        display_text = f"{i+1}. {t['task']} | Due: {t['due_date']} | Priority: {t['priority']} | {status}"
        listbox.insert(tk.END, display_text)
        # Color coding priority
        if t["priority"].lower() == "high":
            listbox.itemconfig(tk.END, {'fg': 'red'})
        elif t["priority"].lower() == "medium":
            listbox.itemconfig(tk.END, {'fg': 'orange'})
        else:
            listbox.itemconfig(tk.END, {'fg': 'green'})

def add_task():
    task_name = simpledialog.askstring("Task", "Enter task:")
    if not task_name:
        return
    due_date = simpledialog.askstring("Due Date", "Enter due date (YYYY-MM-DD):")
    priority = simpledialog.askstring("Priority", "High / Medium / Low:")
    tasks.append({"task": task_name, "due_date": due_date, "priority": priority, "completed": False})
    save_tasks()
    update_listbox()

def mark_completed():
    selected = listbox.curselection()
    if not selected:
        messagebox.showwarning("Select Task", "Please select a task to mark completed.")
        return
    index = selected[0]
    tasks[index]["completed"] = True
    save_tasks()
    update_listbox()

def delete_task():
    selected = listbox.curselection()
    if not selected:
        messagebox.showwarning("Select Task", "Please select a task to delete.")
        return
    index = selected[0]
    del tasks[index]
    save_tasks()
    update_listbox()

# Main Window
root = tk.Tk()
root.title("Advanced To-Do List")
root.geometry("600x450")
root.config(bg="#e3f2fd")

tasks = load_tasks()

# Title Label
tk.Label(root, text="My To-Do List", font=("Helvetica", 20, "bold"), bg="#e3f2fd", fg="#0d47a1").pack(pady=10)

# Frame for Listbox + Scrollbar
frame = tk.Frame(root, bg="#e3f2fd")
frame.pack(pady=10)

scrollbar = tk.Scrollbar(frame)
scrollbar.pack(side=tk.RIGHT, fill=tk.Y)

listbox = tk.Listbox(frame, width=80, height=15, yscrollcommand=scrollbar.set, font=("Arial", 12))
listbox.pack(side=tk.LEFT, fill=tk.BOTH)

scrollbar.config(command=listbox.yview)

# Button Frame
btn_frame = tk.Frame(root, bg="#e3f2fd")
btn_frame.pack(pady=15)

tk.Button(btn_frame, text="Add Task", width=15, bg="#42a5f5", fg="white", font=("Arial", 12), command=add_task).grid(row=0, column=0, padx=5)
tk.Button(btn_frame, text="Mark Completed", width=15, bg="#66bb6a", fg="white", font=("Arial", 12), command=mark_completed).grid(row=0, column=1, padx=5)
tk.Button(btn_frame, text="Delete Task", width=15, bg="#ef5350", fg="white", font=("Arial", 12), command=delete_task).grid(row=0, column=2, padx=5)

update_listbox()

root.mainloop()
