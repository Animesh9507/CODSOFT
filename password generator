import tkinter as tk
from tkinter import messagebox
import secrets
import string
import json
import os

try:
    import pyperclip
    CLIPBOARD_AVAILABLE = True
except ImportError:
    CLIPBOARD_AVAILABLE = False

PASSWORD_FILE = "secure_passwords.json"
password_data = {}
is_dark = True

# Load saved passwords
if os.path.exists(PASSWORD_FILE):
    with open(PASSWORD_FILE, "r") as file:
        try:
            password_data = json.load(file)
        except:
            password_data = {}

def save_data():
    with open(PASSWORD_FILE, "w") as file:
        json.dump(password_data, file, indent=4)

def apply_theme():
    bg = "#0d0d0d" if is_dark else "#f5f5f5"
    fg = "#39ff14" if is_dark else "#000000"
    root.config(bg=bg)
    for widget in root.winfo_children():
        if isinstance(widget, tk.Entry):
            widget.config(bg="#1a1a1a" if is_dark else "#ffffff",
                          fg=fg, insertbackground=fg)
        if isinstance(widget, tk.Label):
            widget.config(bg=bg, fg=fg)

def toggle_theme():
    global is_dark
    is_dark = not is_dark
    apply_theme()

def generate_password():
    try:
        length = int(length_entry.get())
    except:
        messagebox.showerror("Error", "Enter a valid number for length")
        return
    characters = string.ascii_letters + string.digits + string.punctuation
    password = ''.join(secrets.choice(characters) for _ in range(length))
    password_entry.delete(0, tk.END)
    password_entry.insert(0, password)

def save_password():
    website = website_entry.get()
    username = username_entry.get()
    password = password_entry.get()
    if not website or not username or not password:
        messagebox.showerror("Error", "All fields are required")
        return
    password_data[website] = {"username": username, "password": password}
    save_data()
    messagebox.showinfo("Saved", "Password saved successfully!")

def search_password():
    website = website_entry.get()
    if website in password_data:
        username = password_data[website]["username"]
        pwd = password_data[website]["password"]
        messagebox.showinfo("Password Found", f"Username: {username}\nPassword: {pwd}")
    else:
        messagebox.showerror("Not Found", "No entry found for this website.")

def delete_password():
    website = website_entry.get()
    if website in password_data:
        del password_data[website]
        save_data()
        messagebox.showinfo("Deleted", "Password deleted successfully!")
    else:
        messagebox.showerror("Not Found", "No entry found for this website.")

def copy_password():
    if CLIPBOARD_AVAILABLE:
        pyperclip.copy(password_entry.get())
        messagebox.showinfo("Copied", "Password copied to clipboard!")
    else:
        messagebox.showerror("Error", "pyperclip module not installed")

# Main Window
root = tk.Tk()
root.title("Final Premium Password Manager")
root.geometry("500x500")
root.config(bg="#0d0d0d")

# Labels & Entries
tk.Label(root, text="Website:", font=("Arial", 12, "bold")).pack(pady=5)
website_entry = tk.Entry(root, font=("Arial", 14))
website_entry.pack(pady=5, fill="x", padx=20)

tk.Label(root, text="Username/Email:", font=("Arial", 12, "bold")).pack(pady=5)
username_entry = tk.Entry(root, font=("Arial", 14))
username_entry.pack(pady=5, fill="x", padx=20)

tk.Label(root, text="Password:", font=("Arial", 12, "bold")).pack(pady=5)
password_entry = tk.Entry(root, font=("Arial", 14))
password_entry.pack(pady=5, fill="x", padx=20)

tk.Label(root, text="Password Length:", font=("Arial", 12, "bold")).pack(pady=5)
length_entry = tk.Entry(root, font=("Arial", 14))
length_entry.insert(0, "12")
length_entry.pack(pady=5, fill="x", padx=20)

# Buttons Frame
btn_frame = tk.Frame(root, bg="#0d0d0d")
btn_frame.pack(pady=10)

btns = [
    ("Generate", generate_password, "#39ff14"),
    ("Save", save_password, "#ff6f00"),
    ("Search", search_password, "#2979ff"),
    ("Delete", delete_password, "#d50000"),
    ("Copy", copy_password, "#ff1744"),
    ("Toggle Theme", toggle_theme, "#00e676")
]

for text, cmd, color in btns:
    tk.Button(btn_frame, text=text, command=cmd,
              bg=color, fg="black", font=("Arial", 12, "bold"),
              relief="flat", width=12, height=2).pack(pady=5)

apply_theme()
root.mainloop()
